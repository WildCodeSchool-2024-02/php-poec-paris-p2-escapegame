{% extends 'layout.html.twig' %} {% block stylesheet %}
<link rel="stylesheet" href="/assets/css/puzzle.css" />
{% endblock %} {% block content %}
<div class="card__outer">
    <h2>{{ challenge.name }}</h2>
    <div class="card__inner">
        <div class="card__content">
            <p>{{ challenge.instructions }}</p>
            <form
                class="puzzle"
                method="post"
                action="validation/?id={{ challenge.id }}"
            >
                <div class="puzzle__container">
                    {% set images = ['1.png', '2.png', '3.png', '4.png',
                    '5.png', '6.png'] %} {% for image in images %}
                    <img
                        src="/assets/images/challenges/2/{{ image }}"
                        alt="Image {{ loop.index }}"
                        id="{{ loop.index }}"
                        draggable="true"
                        ondragstart="drag(event)"
                        ondrop="drop(event)"
                        ondragover="allowDrop(event)"
                    />
                    {% endfor %}
                </div>

                <div class="puzzle__solution-container">
                    {% for index in range(1, images|length) %}
                    <div
                        id="box{{ index }}"
                        draggable="true"
                        class="puzzle__solution-container__block"
                        ondrop="drop(event)"
                        ondragover="allowDrop(event)"
                    />
                </div>
                {% endfor %}
                <div class="button__container">
                    <button type="clue" id="clue">Indice</button>
                    <button type="submit" id="validate">Valider</button>
                </div>
            </form>
        </div>
    </div>
</div>
{% block javascript %}
<script>
    function allowDrop(ev) {
        ev.preventDefault();
    }

    let imgId = "";
    function drag(ev) {
        ev.dataTransfer.setData("text", ev.target.id);
        imgId = ev.target.id;
        return imgId;
    }

    const userSolution = [];
    function drop(ev) {
        ev.preventDefault();
        var data = ev.dataTransfer.getData("text");
        const boxId = ev.target.id;
        const boxIndex = parseInt(boxId.replace("box", "")) - 1; // Get box index (0-based)
        ev.target.appendChild(document.getElementById(imgId));
        while (userSolution.length < boxIndex + 1) {
            userSolution.push(null);
        }
        userSolution[boxIndex] = imgId;
        while (userSolution[userSolution.length - 1] === null) {
            userSolution.pop();
        }
        const input = document.createElement("input");
        input.type = "hidden";
        input.name = "userSolution";
        input.value = JSON.stringify(userSolution);
        document.querySelector("form.puzzle").appendChild(input);
        
        console.log(userSolution);
    }
</script>
{% endblock %} {% endblock %}
